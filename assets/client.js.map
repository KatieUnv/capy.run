{
  "version": 3,
  "sources": ["../../src/background.ts", "../../src/spinny.ts", "../../src/animations.ts", "../../src/gameplay.ts", "../../src/client.ts"],
  "sourcesContent": ["import \"./phaser.d\";\n\nexport function createBackground(scene: Phaser.Scene){\n    scene.load.image('layer1', 'assets/image/background1.png');\n    scene.load.image('layer2', 'assets/image/background2.png');\n    scene.load.image('layer3', 'assets/image/background3.png');\n    scene.load.image('layer4', 'assets/image/background4.png');\n    scene.load.image('soil', 'assets/image/ground.png');\n}\n\n", "import \"./phaser.d\";\n\nlet smallCapy;\nlet speed = 5;\n\nexport function createSpinny(game: Phaser.Scene) {\n    smallCapy = game.physics.add.image(400, 100, 'standing1');\n\n    smallCapy.setVelocity(100, 200);\n    smallCapy.setBounce(1, 1);\n    smallCapy.setCollideWorldBounds(true);\n}\n\nexport function updateSpinny() {\n    smallCapy.angle += speed;\n}", "import \"./phaser.d\";\n\nexport function loadAnimations(scene: Phaser.Scene) {\n  scene.anims.create({\n    key: 'walk',\n    frames: scene.anims.generateFrameNumbers('capy', { frames: [72, 73, 74, 75, 76, 77, 78, 79] }),\n    frameRate: 8,\n    repeat: -1\n  });\n\n  scene.anims.create({\n    key: \"standing\",\n    frames: scene.anims.generateFrameNumbers('capy', { frames: [9, 10, 11, 12, 13, 14, 15, 16] }),\n    frameRate: 8,\n    repeat: -1\n  });\n\n  scene.anims.create({\n    key: \"sitting\",\n    frames: scene.anims.generateFrameNumbers('capy', { frames: [27, 28, 29, 30, 31, 32, 33, 34] }),\n    frameRate: 8,\n    repeat: -1\n  });\n}\n", "import \"./phaser.d\";\nimport {createBackground} from \"./background\";\nimport {createSpinny, updateSpinny} from \"./spinny\";\nimport {loadAnimations} from \"./animations\";\n\nexport default class Gameplay extends Phaser.Scene {\n  cursors: Phaser.Types.Input.Keyboard.CursorKeys;\n  capy: Phaser.GameObjects.Sprite;\n\n  bg1: Phaser.GameObjects.TileSprite;\n  bg2: Phaser.GameObjects.TileSprite;\n  bg3: Phaser.GameObjects.TileSprite;\n  bg4: Phaser.GameObjects.TileSprite;\n  ground: Phaser.GameObjects.TileSprite;\n\n  preload() {\n    this.load.image('sky', 'assets/image/bg.png');\n    createBackground(this);\n    this.load.image('standing1', 'assets/image/standing.png');\n    this.load.spritesheet('capy', 'assets/image/capioca2.png', {frameWidth: 64, frameHeight: 64})\n  }\n\n  create() {\n    this.bg1 = this.add.tileSprite(0, 0, 1100, 370, 'layer1');\n    this.bg2 = this.add.tileSprite(0, 0, 1100, 370, 'layer2');\n    this.bg3 = this.add.tileSprite(0, 0, 1100, 370, 'layer3');\n    createSpinny(this);\n    this.bg4 = this.add.tileSprite(0, 0, 1100, 370, 'layer4');\n\n    var bglayers = [this.bg1, this.bg2, this.bg3, this.bg4];\n    for (var i = 0; i < bglayers.length; i++) {\n      bglayers[i].originX = 0;\n      bglayers[i].originY = 0;\n      bglayers[i].scale = 450 / 370;\n      bglayers[i].scale = 450 / 370;\n    }\n\n    loadAnimations(this);\n\n    this.capy = this.add.sprite(150, 400, 'capy');\n    this.capy.setScale(2);\n    this.capy.play('standing');\n\n    this.cursors = this.input.keyboard.createCursorKeys();\n\n    this.ground = this.add.tileSprite(0, 400, 1400, 200, 'soil');\n    this.ground.originX = 0;\n    this.ground.originY = 0;\n  }\n\n  update() {\n    updateSpinny();\n    if (Phaser.Input.Keyboard.JustDown(this.cursors.right)) {\n      this.capy.play('walk');\n    }\n\n    if (this.cursors.right.isDown) {\n      this.bg4.tilePositionX += 4;\n      this.bg3.tilePositionX += 3;\n      this.bg2.tilePositionX += 2;\n      this.bg1.tilePositionX += 1;\n      this.ground.tilePositionX += 4;\n    }\n    if (Phaser.Input.Keyboard.JustUp(this.cursors.right)) {\n      this.capy.play('standing');\n    }\n  }\n}\n", "import \"./client.css\";\nimport \"./phaser.d\";\nimport Gameplay from \"./gameplay\";\n\nconst ratio = Math.max(window.innerWidth / window.innerHeight, window.innerHeight / window.innerWidth)\nconst defaultHeight = 600;\nconst defaultWidth = ratio * defaultHeight;\n\n\nconst config: Phaser.Types.Core.GameConfig = {\n  type: Phaser.AUTO,\n  width: defaultWidth,\n  height: defaultHeight,\n  parent: \"game\",\n  scale: {\n    mode: Phaser.Scale.FIT,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    width: defaultWidth,\n    height: defaultHeight\n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: {y: 100}\n    }\n  },\n  scene: new Gameplay(\"\")\n};\n\n\nexport function init(): void {\n  new Phaser.Game(config);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", init);\n"],
  "mappings": "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",
  "names": ["createBackground", "scene", "smallCapy", "speed", "createSpinny", "game", "updateSpinny", "loadAnimations", "scene", "Gameplay", "createBackground", "createSpinny", "bglayers", "i", "loadAnimations", "updateSpinny", "ratio", "defaultHeight", "defaultWidth", "config", "Gameplay", "init"]
}
